1.合约可以读/写自己的内部存储
2.维护一个数据存储账本，存放对其它合约或者世界有用的内容
3.满足某些条件是才会将传入的消息发送到所需的目的地址
4.管理多个用户之间的持续合同或关系。

交易的本质
交易是由外部拥有的账户发起的签名消息，由以太坊网络传输，并被序列化侯记录在以太坊区块链上。
交易是唯一可以出发状态或导致合约在EVM中执行的事务。
以太坊是一个全局单例状态机，交易是唯一可以改变状态的东西。
合约不是自己运行的，以太坊也不会主动执行合约代码。以太坊上的一切变化都始于交易


交易是包含以下数据的序列化二进制消息：
· nonce: 交易的唯一标识符
· gasPrice: 交易的燃料价格
· gasLimit: 交易的燃料限制
· to: 交易的目标地址
· value: 交易的金额
· data: 交易的附加数据
·v, r, s: 交易的签名数据

交易中的nonce
黄皮书的定义：每个账户都有一个nonce值，表示该账户已发送交易的数量。nonce用于防止重放攻击，并确保交易的顺序性。
nonce是一个递增的计数器，每次发送交易时，nonce值都会增加1。
nonce值还用于防止错误计算账户余额。nonce强制来自任何地址的交易按顺序处理。
使用nonce确保所有交易都按顺序执行，防止因网络延迟或其他原因导致的交易混乱，等同于防止比特币中的双重支付问题。

并发和nonce
以太坊是一个允许操作（节点，客户端，Dapp）的并发系统，但强制执行单例状态。出块的时候只有一个系统状态。
在这种情况下，nonce的存在变得尤为重要。它确保了即使在并发环境中，来自同一账户的交易也能按顺序执行，从而维护了系统状态的一致性。
可以用一台服务器为各个应用分配nonce，先来的先服务

gas和以太不是同一个东西
gas是以太坊网络中用于衡量计算工作量的单位。
每个操作（如计算、存储、传输数据）都有一个预定义的gas成本。
gas和以太是由自由市场价格调整的

零地址
零地址（0x0000000000000000000000000000000000000000）是以太坊网络中的一个特殊地址，通常用于表示“无效”或“空”地址。
它在智能合约中有多种用途，例如：
· 作为默认值：在合约中，如果某个地址未被初始化，通常会将其设置为零地址。
· 作为销毁地址：在某些代币合约中，销毁代币的操作会将其发送到零地址，从而使其无法再被使用。
· 作为占位符：在某些情况下，零地址可以用作占位符，以便在未来替换为有效地址。

以太坊虚拟机（EVM）
以太坊虚拟机（EVM）是以太坊网络的核心组件，负责执行智能合约和处理交易。它是一个图灵完备的虚拟机，能够执行任何计算任务。
作为区块验证协议的一部分，每个区块都包含一个EVM状态快照，记录了所有账户的余额、合约代码和存储数据等信息。
EVM不仅是沙盒封装的，而且是完全隔离的，EVM运行的代码是无法访问网络、文件系统和其他进程的，甚至智能合约之间的访问也是受限的
合约以字节码的格式存在于区块链上的存储中，EVM通过解释执行这些字节码来实现合约的逻辑。
合约通常以高级语言（如Solidity）编写，然后被编译成字节码以供EVM执行。最终通过客户端上载部署到区块链网络中

EVM和账户
以太坊中有两类账户：外部账户和合约账户，它们共用EVM中的同一个地址空间
这两类账户对EVM来说处理方式是完全一样的
每个账户在EVM中都有一个键值对形式的持久化存储，其中的key和value的长度都是256位，称之为存储空间
部署合约时，合约会在以太坊网络上生成一个唯一的“合约地址”。这个地址就是以太坊账户地址（20字节），同时也是EVM（以太坊虚拟机）内部识别和操作该合约的地址。

payload 就是“你想让链上程序处理的具体数据”，比如合约调用参数、消息内容等。
常见场景举例：
普通转账交易的 payload 为空（只包含转账金额和接收方地址）。
调用智能合约时，payload 就是要传递给合约的函数选择器和参数（通常是 ABI 编码后的二进制数据）。
在 EVM 层，payload 也可以指 call、delegatecall 等指令调用时附带的数据内容。

（storage）每个账户在EVM中都有一个键值对形式的持久化存储，其中的key和value的长度都是256位，称之为存储空间

storage gas开销大
memory gas开销小
stack gas几乎是免费使用，但数量有限制

solidity语法